<?xml version="1.0" encoding="UTF-8" ?>
<autoMake
        xmlns="http://molicode_repo.gitee.io/molicode_doc/schema/autoCode"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://molicode_repo.gitee.io/molicode_doc/schema/autoCode http://molicode_repo.gitee.io/molicode_doc/schema/autoCode/autoCode-1.0.xsd">

    <moliCodeVersion>1.0.0</moliCodeVersion>


    <mavenInfo>
        <modelVersion>4.0.0</modelVersion>
        <groupId>com.shareyi.molicode</groupId>
        <version>1.0-SNAPSHOT</version>
        <artifactId>autocode-template-ddd</artifactId>
        <name>moliCode生成DDD相关代码</name>
        <description>moliCode生成DDD相关代码</description>

        <developers>
            <developer>
                <name>david</name>
                <email>zsb1987@foxmail.com</email>
                <organization>www.shareyi.com</organization>
                <organizationUrl>www.shareyi.com</organizationUrl>
            </developer>
        </developers>
    </mavenInfo>

    <properties>
        <!-- 代码片段配置文件，将部分公用的代码抽取出来放置到此处 -->
        <property key="snippet.template.path">config/molicode/snippetTemplate.xml</property>
        <!-- 用户自定义的配置文件，配置的值以文本方式直接可以在：extendConf.get("") 到-->
        <property key="extend.text.config">config/molicode/extendConfig.xml</property>
        <!-- 页面依赖资源配置文件（可支持requirejs和 普通引入）-->
        <property key="pagerequire.map.config">config/molicode/requireConfig.xml</property>
        <!-- 数据库类型到java类型映射-->
        <property key="dbtype.javatype.map.config">config/molicode/db2javaTypeMap.xml</property>
        <!-- 数据库类型到页面类型映射-->
        <property key="dbtype.columntag.map.config">config/molicode/dbType2ColumnTagMap.xml</property>

    </properties>


    <templates>


        <template id="assembler" name="assembler"
                  destFile="/${config.artifactId}-provider/src/main/java/${PubUtils.packageToPath(config.basePackage)}/provider/assembler/${tableDefine.id}Assembler.java"
                  templateFile="templates/provider/assembler.gsp" engine="groovy">
            <acceptDataModel>tableModel</acceptDataModel>
        </template>

        <!--
                <template id="appService" name="appService接口"
                          destFile="/${config.artifactId}-app/src/main/java/${PubUtils.packageToPath(config.basePackage)}/app/${tableDefine.id}AppService.java"
                          templateFile="templates/app/appService.gsp" engine="groovy">
                    <acceptDataModel>tableModel</acceptDataModel>
                </template>


                <template id="appServiceImpl" name="appService实现"
                          destFile="/${config.artifactId}-app/src/main/java/${PubUtils.packageToPath(config.basePackage)}/app/impl/${tableDefine.id}AppServiceImpl.java"
                          templateFile="templates/app/appServiceImpl.gsp" engine="groovy">
                    <acceptDataModel>tableModel</acceptDataModel>
                </template>-->


        <template id="entity" name="entity类"
                  destFile="/${config.artifactId}-domain/src/main/java/${PubUtils.packageToPath(config.basePackage)}/domain/${PubUtils.packageToPath(config.category)}/${StringUtils.lowerCase(tableDefine.id)}/entity/${tableDefine.id}.java"
                  templateFile="templates/domain/entity.gsp" engine="groovy">
            <acceptDataModel>tableModel</acceptDataModel>
        </template>


        <template id="identifier" name="identifier主键"
                  destFile="/${config.artifactId}-domain/src/main/java/${PubUtils.packageToPath(config.basePackage)}/domain/${PubUtils.packageToPath(config.category)}/${StringUtils.lowerCase(tableDefine.id)}/entity/${tableDefine.id}Identifier.java"
                  templateFile="templates/domain/identifier.gsp" engine="groovy">
            <acceptDataModel>tableModel</acceptDataModel>
        </template>


        <!--   <template id="createDomainService" name="createDomainService"
                     destFile="/${config.artifactId}-domain/src/main/java/${PubUtils.packageToPath(config.basePackage)}/domain/${PubUtils.packageToPath(config.category)}/${StringUtils.lowerCase(tableDefine.id)}/service/Create${tableDefine.id}DomainService.java"
                     templateFile="templates/domain/createDomainService.gsp" engine="groovy">
               <acceptDataModel>tableModel</acceptDataModel>
           </template>


           <template id="updateDomainService" name="updateDomainService"
                     destFile="/${config.artifactId}-domain/src/main/java/${PubUtils.packageToPath(config.basePackage)}/domain/${PubUtils.packageToPath(config.category)}/${StringUtils.lowerCase(tableDefine.id)}/service/Update${tableDefine.id}DomainService.java"
                     templateFile="templates/domain/updateDomainService.gsp" engine="groovy">
               <acceptDataModel>tableModel</acceptDataModel>
           </template>


           <template id="validator" name="Validator"
                     destFile="/${config.artifactId}-domain/src/main/java/${PubUtils.packageToPath(config.basePackage)}/domain/${PubUtils.packageToPath(config.category)}/${StringUtils.lowerCase(tableDefine.id)}/service/${tableDefine.id}Validator.java"
                     templateFile="templates/domain/validator.gsp" engine="groovy">
               <acceptDataModel>tableModel</acceptDataModel>
           </template>
   -->

        <template id="repo" name="repo仓库接口"
                  destFile="/${config.artifactId}-domain/src/main/java/${PubUtils.packageToPath(config.basePackage)}/domain/${PubUtils.packageToPath(config.category)}/${StringUtils.lowerCase(tableDefine.id)}/repo/${tableDefine.id}Repo.java"
                  templateFile="templates/domain/repo.gsp" engine="groovy">
            <acceptDataModel>tableModel</acceptDataModel>
        </template>


        <template id="builderSnap" name="builderSnap(java源码)"
                  destFile="tmp/builderSnapshot.java"
                  templateFile="templates/tool/builderSnap.gsp" engine="groovy">
            <acceptDataModel>javaSource</acceptDataModel>
        </template>

        <template id="copyToBuilder" name="copyToBuilder(java源码)"
                  destFile="tmp/builderCopy.java"
                  templateFile="templates/tool/builderCopy.gsp" engine="groovy">
            <acceptDataModel>javaSource</acceptDataModel>
        </template>

        <template id="copyBean" name="复制bean属性(java源码)"
                  destFile="tmp/copyBean.java"
                  templateFile="templates/tool/copyBean.gsp" engine="groovy">
            <acceptDataModel>javaSource</acceptDataModel>
        </template>

    </templates>


</autoMake>
